import t from"get-value";import e from"ora";import r from"fs";import o from"chalk";import a from"log-symbols";import n from"path";import s from"sane";import{debounce as i}from"throttle-debounce";import c from"camelcase";import l from"find-up";import p from"globby";import u from"uppercamelcase";import f from"set-value";import d from"pupa";import m from"object.defaults/mutable.js";import{promisify as g}from"util";import{exec as h}from"child_process";function y(t){return t.replace(/([\da-z])([A-Z])/g,"$1-$2").replace(/([A-Z])([A-Z])(?=[a-z])/g,"$1-$2").toLowerCase()}function w(t,e){const r=/@([\d.]+)x/.exec(t);return r?Number.parseFloat(r[1]):void 0!==e?e:1}function $(t,e){let r=(t=`${t}`).replace(`${e}/`,"").split("/").map((t=>function(t){return t.replace(/(\W)/g,"_").replace(/_{2,}/g,".").replace(/^_/,"").replace(/_$/,"")}(t))),o=r.pop();o=o.toUpperCase(),r=r.map((t=>c(t)));let a=e.split("/");return a=a.slice(a.length-(1===a.length?1:2)),a.push("sprites"),a=u(a.join("-")),r.length>0?[a,t=(t=r.join(".")).replace(/(\W^\.)/g,"").replace(/\.{2,}/g,".").replace(/^\./,"").replace(/\.$/,""),o].join("."):[a,o].join(".")}function j(e){if(e.length>0){const r=e[0];return t(r,"meta.related_multi_packs",{default:[]}).length+1}return 0}async function b(e,o,a,s){const i=await async function(e,o,a,s){const i=t(s,"includeSizeInfo",a.includeSizeInfo),c=t(s,"includePNGExpressMetadata",a.includePNGExpressMetadata),p={};if(!i&&!c)return p;if(c)try{const t=await l("pngexpress-metadata.json",{cwd:n.join(a.sourceDirectory,o),type:"file"});if(t){const e=`${n.relative(t,n.join(a.sourceDirectory,o)).replace("../","")}/`,s=await r.readJson(t);for(const t of s.assets)for(const r of t.states){let a=o+t.id.replace(e,"");a="/"===a[0]?a.slice(1):a,a="default"===r?a:a+r;const n={...t};delete n.id,delete n.states,p[a]=n}return p}}catch(t){console.log(t)}for(const t of e||[])for(const e of Object.keys(t.frames)){const r=t.frames[e];p[e]={id:e,width:r.sourceSize.w,height:r.sourceSize.h}}return p}(e,o,a,s),c=o,p={};for(const t of e||[])for(const e of Object.keys(t.frames)){let t=e;i[e]&&(t={id:e,...i[e]}),f(p,$(e,c),t)}return p}function x(t,e){let r="";const o=Object.keys(t)[0],a=function(t){const e=[];for(const r of Object.keys(t))Object.prototype.hasOwnProperty.call(t,r)&&e.push([r,t[r]]);e.sort(((t,e)=>{const r=t[0],o=e[0];return r<o?-1:r>o?1:0}));const r={};for(const t of e)r[t[0]]=t[1];return r}(t[o]);let n=JSON.stringify(a,void 0,2);return n=n.replace(/"([^"()]+)":/g,"$1:"),r=`${r}${d("export const {assetName} = {assetData};",{assetName:o,assetData:n})}\n`,r=`${r}${d("export const {assetsVariable}LoaderInfo {\n  assets: {assetsVariable},\n  fileName : '{fileName}',\n  numberOfParts : {numberOfParts},\n  type: 'sprites'\n};",{assetsVariable:o,fileName:e.fileName,numberOfParts:e.numberOfParts})}\n`,r}async function v(e,o,a){const s=t(a,"scriptDirectory",o.scriptDirectory),i=await p(`${n.join(o.targetDirectory,e)}/*[0-9]+.json`),c=[];for(const t of i)c.push(r.readJson(t));const l=await Promise.all(c),u=x(await b(l,e,o,a),{fileName:e,numberOfParts:j(l)}),f=function(t,e){const r=t.split("/"),o=r.pop();return r.length<2&&r.push(o),t=r.join("/"),`${n.join(e,t)}/assets/sprites-${o}.ts`}(e,s);await r.outputFile(f,u)}const D=g(h),k={format:"pixijs4","texture-format":"png","jpg-quality":100,"png-opt-level":0,opt:"RGBA8888","prepend-folder-name":!0,"trim-sprite-names":!0,algorithm:"MaxRects","maxrects-heuristics":"Best","pack-mode":"Best","scale-mode":"Smooth",multipack:!0,"force-identical-layout":!0,"trim-mode":"Trim","alpha-handling":"ClearTransparentPixels","default-pivot-point":"0,0","enable-rotation":!0,quiet:!0,extrude:"0","shape-padding":"2",variant:["1:@2x","0.5:"]};async function O(t,e){const r=function(t,e){"1"===(e=e||{}).extrude&&(e["shape-padding"]=0);const r=new P;r.addPath(`${t}`);for(const t of Object.keys(e))r.addOption(t,e[t]);return r.build()}(t,m(e,k));try{await D(r)}catch(t){if(t&&t.stderr)throw new Error(t.stderr);return!1}return!0}class P{constructor(){this.commands=[],this.path=""}addPath(t){this.path=t}addOption(t,e){this.commands.push({option:`--${y(t)}`,value:e})}build(){if(!this.path)throw new Error("Must specify a path to process (image/directory)");const t=this.commands.map((t=>this.resolveValue(t.option,t.value))).join(" ");return`TexturePacker ${this.path} ${t}`}resolveValue(t,e){return Array.isArray(e)?e.map((e=>this.resolveValue(t,e))).join(" "):`${t}${e=!0===e?"":` ${e}`}`}}const N={},A={};async function S(s,i){let c,l;Array.isArray(s)?(c=s[0],l=s[1]):c=s;const u=c.split("/").pop();if(N[c])return console.log(a.warning,o.yellow("Allready packing, starting again afterwards...")),void(A[c]=!0);N[c]=!0;const d=t(l,"textureFormat",i.textureFormat),m={sheet:`${n.join(i.targetDirectory,c,u)}-{n1}{v}.${d}`,data:`${n.join(i.targetDirectory,c,u)}-{n1}{v}.json`,replace:`${u}=${c}`,extrude:t(l,"extrude",i.extrude)?"1":"0","texture-format":d},g=e(`Packing ${c}`).start();try{if(!await O(`${n.join(i.sourceDirectory,c)}`,m))return void g.fail(`Error packing ${c}`)}catch(t){return g.fail(`Error packing ${c}`),void console.error(a.warning,t.message)}await async function(t){const e=await p(`${t}/*.json`);for(const t of e){const e=w(t),o=await r.readJson(t);f(o,"meta.scale",e),await r.writeJson(t,o)}}(`${n.join(i.targetDirectory,c)}`),await v(c,i,l),N[c]=!1,A[c]?(A[c]=!1,g.warn("Needs repacking, something changed while packing..."),await S(s,i)):g.succeed(`Done packing ${c}`)}async function z(t,e){return new Promise((r=>{let c,l={};if(Array.isArray(t)?(c=t[0],l=t[1]):c=t,!0!==e.watch&&!0!==l.watch||!1===l.watch)return void r();const p=i(e.watchDelay,(()=>{S(t,e)})),u=s(`${n.join(e.sourceDirectory,c)}`,{glob:["**/*.png","**/*.jpg"]});u.on("ready",(()=>{console.log(a.info,o.blue(`Started watching ${c} with a delay of ${e.watchDelay/1e3}s`)),r()})),u.on("change",p),u.on("add",p),u.on("delete",p)}))}async function E(n){const s=await async function(o){const a=e(`Reading settings from ${o}...`).start();let n={};try{const e=await r.readJSON(o);n=t(e,"sprites",{}),n=objectDefaults(n,{sourceDirectory:"./assets/",scriptDirectory:"./assets/converted/",targetDirectory:"./assets/converted/",watch:!1,watchDelay:500,extrude:!1,textureFormat:"png",includeSizeInfo:!1,includePNGExpressMetadata:!1,directories:[]})}catch{return a.fail(`Could not load settings from ${o}... (does it exist?)`),n}const s=n.directories.length;return s?a.succeed(`Found ${s} directories to process...`):a.fail("Found no directories to process..."),n}(n),i=s.directories;delete s.directories,s&&i&&(await async function(t,e){console.log(a.info,o.blue("Start packing all items..."));for(const r of t)await S(r,e);console.log(a.success,o.green("Done packing all items..."))}(i,s),await async function(t,e){for(const r of t)await z(r,e)}(i,s))}function F(t){E(t||"assets.json")}export{F as pack};
